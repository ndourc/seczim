# Generated by Django 5.2.5 on 2025-08-27 20:18

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_remove_casenote_case_remove_casenote_author_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('case_number', models.CharField(max_length=50, unique=True)),
                ('case_type', models.CharField(choices=[('INVESTIGATION', 'Investigation'), ('AD_HOC_INSPECTION', 'Ad-hoc Inspection'), ('COMPLAINT', 'Complaint Investigation'), ('REGULATORY_ACTION', 'Regulatory Action'), ('RISK_ESCALATION', 'Risk Escalation')], default='INVESTIGATION', max_length=30)),
                ('title', models.CharField(default='Case title to be provided', max_length=255)),
                ('description', models.TextField(default='Case description to be provided')),
                ('complainant', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('ASSIGNED', 'Assigned'), ('IN_PROGRESS', 'In Progress'), ('UNDER_REVIEW', 'Under Review'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='OPEN', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('opened_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('resolved_date', models.DateField(blank=True, null=True)),
                ('progress_notes', models.TextField(blank=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='case_attachments/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('smi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='core.smi')),
            ],
            options={
                'ordering': ['-opened_date'],
            },
        ),
        migrations.CreateModel(
            name='AdHocInspection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trigger_type', models.CharField(choices=[('COMPLAINT', 'Complaint Received'), ('RISK_ALERT', 'Risk Alert Triggered'), ('REGULATORY_REQUEST', 'Regulatory Request'), ('INTERNAL_ESCALATION', 'Internal Escalation'), ('MARKET_INTELLIGENCE', 'Market Intelligence')], default='COMPLAINT', max_length=30)),
                ('inspection_scope', models.TextField(default='Inspection scope to be defined')),
                ('areas_of_focus', models.TextField(help_text='Specific areas to focus on: CDD, record-keeping, reporting compliance')),
                ('inspection_methodology', models.TextField(default='Inspection methodology to be documented')),
                ('immediate_findings', models.TextField(blank=True)),
                ('immediate_actions_required', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('estimated_duration', models.IntegerField(default=1, help_text='Estimated duration in days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspectors', models.ManyToManyField(blank=True, related_name='ad_hoc_inspections', to=settings.AUTH_USER_MODEL)),
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ad_hoc_inspection', to='case_management_module.case')),
            ],
        ),
        migrations.CreateModel(
            name='CaseAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='case_attachments/')),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('DOCUMENT', 'Document'), ('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video'), ('OTHER', 'Other')], default='DOCUMENT', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_attachments', to='case_management_module.case')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_notes', to='case_management_module.case')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseTimeline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('CASE_OPENED', 'Case Opened'), ('ASSIGNED', 'Case Assigned'), ('INVESTIGATION_STARTED', 'Investigation Started'), ('INSPECTION_SCHEDULED', 'Inspection Scheduled'), ('INSPECTION_COMPLETED', 'Inspection Completed'), ('FINDINGS_REPORTED', 'Findings Reported'), ('ACTIONS_TAKEN', 'Actions Taken'), ('CASE_RESOLVED', 'Case Resolved'), ('CASE_CLOSED', 'Case Closed')], default='CASE_OPENED', max_length=30)),
                ('event_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('related_documents', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='case_management_module.case')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='Investigation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('investigation_type', models.CharField(choices=[('REGULATORY', 'Regulatory Investigation'), ('COMPLIANCE', 'Compliance Investigation'), ('FINANCIAL', 'Financial Investigation'), ('OPERATIONAL', 'Operational Investigation'), ('FRAUD', 'Fraud Investigation')], default='REGULATORY', max_length=30)),
                ('scope', models.TextField(default='Investigation scope to be defined')),
                ('methodology', models.TextField(default='Investigation methodology to be documented')),
                ('evidence_collected', models.TextField(blank=True)),
                ('preliminary_findings', models.TextField(blank=True)),
                ('final_findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('estimated_completion', models.DateField(blank=True, null=True)),
                ('actual_completion', models.DateField(blank=True, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='investigation', to='case_management_module.case')),
                ('team_members', models.ManyToManyField(blank=True, related_name='investigations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
