# Generated by Django 5.2.3 on 2025-08-22 18:47

import django.db.models.deletion
from django.db import migrations, models
import uuid
import django.core.validators
import django.utils.timezone



class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True)),
                ('assessment_date', models.DateField()),
                ('assessment_type', models.CharField(choices=[('REGULAR', 'Regular Assessment'), ('POST_INSPECTION', 'Post-Inspection Assessment'), ('TRIGGERED', 'Triggered Assessment'), ('FOLLOW_UP', 'Follow-up Assessment')], default='REGULAR', max_length=30)),
                ('scope', models.TextField(default='Assessment scope to be defined')),
                ('methodology', models.TextField(default='Assessment methodology to be documented')),
                ('risk_areas', models.JSONField(default=dict)),
                ('findings', models.TextField(default='Findings to be documented')),
                ('compliance_gaps', models.TextField(blank=True)),
                ('risk_rating', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='MEDIUM', max_length=20)),
                ('recommendations', models.TextField(blank=True)),
                ('action_items', models.JSONField(default=list)),
                ('priority_actions', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('UNDER_REVIEW', 'Under Review'), ('ESCALATED', 'Escalated')], default='PENDING', max_length=20)),
                ('assessor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.user')),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.smi')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceIndex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True)),
                ('period', models.DateField()),
                ('analysis_period', models.CharField(choices=[('QUARTERLY', 'Quarterly'), ('ANNUAL', 'Annual')], default='QUARTERLY', max_length=20)),
                ('overall_compliance_score', models.FloatField(default=75, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('regulatory_compliance', models.FloatField(default=75, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('operational_compliance', models.FloatField(default=75, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('financial_compliance', models.FloatField(default=75, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_calibration_score', models.FloatField(default=75, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_adjustment_factor', models.FloatField(default=1.0)),
                ('post_inspection_adjustment', models.FloatField(default=0)),
                ('final_compliance_score', models.FloatField(default=75, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.smi')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceRequirement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True)),
                ('requirement_type', models.CharField(choices=[('REGULATORY', 'Regulatory Requirement'), ('OPERATIONAL', 'Operational Requirement'), ('FINANCIAL', 'Financial Requirement'), ('REPORTING', 'Reporting Requirement'), ('TRAINING', 'Training Requirement'), ('DOCUMENTATION', 'Documentation Requirement')], default='REGULATORY', max_length=30)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('regulatory_reference', models.CharField(blank=True, max_length=255)),
                ('priority', models.CharField(choices=[('LOW', 'Low Priority'), ('MEDIUM', 'Medium Priority'), ('HIGH', 'High Priority'), ('CRITICAL', 'Critical Priority')], default='MEDIUM', max_length=20)),
                ('is_compliant', models.BooleanField(default=False)),
                ('compliance_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_assessment_date', models.DateField(blank=True, null=True)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('compliance_date', models.DateField(blank=True, null=True)),
                ('monitoring_frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('ANNUALLY', 'Annually')], default='QUARTERLY', max_length=20)),
                ('next_review_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.smi')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceViolation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True)),
                ('violation_type', models.CharField(choices=[('MINOR', 'Minor Violation'), ('MAJOR', 'Major Violation'), ('CRITICAL', 'Critical Violation'), ('REPEATED', 'Repeated Violation')], default='MINOR', max_length=20)),
                ('severity', models.CharField(choices=[('LOW', 'Low Severity'), ('MEDIUM', 'Medium Severity'), ('HIGH', 'High Severity'), ('CRITICAL', 'Critical Severity')], default='MEDIUM', max_length=20)),
                ('description', models.TextField()),
                ('date_identified', models.DateField(default=django.utils.timezone.now)),
                ('investigation_status', models.CharField(choices=[('OPEN', 'Open'), ('INVESTIGATING', 'Investigating'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='OPEN', max_length=20)),
                ('root_cause', models.TextField(blank=True)),
                ('impact_assessment', models.TextField(blank=True)),
                ('corrective_actions', models.TextField(blank=True)),
                ('preventive_measures', models.TextField(blank=True)),
                ('resolution_date', models.DateField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_status', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('compliance_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compliance_module.compliancerequirement')),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.smi')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True)),
                ('report_type', models.CharField(choices=[('REGULAR', 'Regular Report'), ('INCIDENT', 'Incident Report'), ('VIOLATION', 'Violation Report'), ('REMEDIATION', 'Remediation Report'), ('ANNUAL', 'Annual Report')], default='REGULAR', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('report_date', models.DateField(default=django.utils.timezone.now)),
                ('executive_summary', models.TextField()),
                ('findings', models.TextField()),
                ('recommendations', models.TextField()),
                ('action_items', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('SUBMITTED', 'Submitted'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20)),
                ('report_file', models.FileField(blank=True, null=True, upload_to='compliance_reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reports', to='auth.user')),
                ('prepared_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prepared_reports', to='auth.user')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to='auth.user')),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.smi')),
            ],
        ),
        migrations.AddConstraint(
            model_name='complianceindex',
            constraint=models.UniqueConstraint(fields=('smi', 'period', 'analysis_period'), name='compliance_module_complianceindex_unique_smi_period_analysis'),
        ),
        migrations.AlterUniqueTogether(
            name='complianceindex',
            unique_together={('smi', 'period', 'analysis_period')},
        ),
    ]
