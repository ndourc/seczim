# Generated by Django 5.2.5 on 2025-08-27 20:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_remove_casenote_case_remove_casenote_author_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RiskIndicator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('indicator_date', models.DateField(default=django.utils.timezone.now)),
                ('indicator_type', models.CharField(choices=[('FINANCIAL', 'Financial Indicator'), ('OPERATIONAL', 'Operational Indicator'), ('MARKET', 'Market Indicator'), ('REGULATORY', 'Regulatory Indicator')], max_length=50)),
                ('indicator_name', models.CharField(max_length=255)),
                ('current_value', models.FloatField()),
                ('threshold_value', models.FloatField()),
                ('trend', models.CharField(choices=[('IMPROVING', 'Improving'), ('STABLE', 'Stable'), ('DETERIORATING', 'Deteriorating'), ('CRITICAL', 'Critical')], default='STABLE', max_length=20)),
                ('is_breached', models.BooleanField(default=False)),
                ('alert_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_indicators', to='core.smi')),
            ],
            options={
                'ordering': ['-indicator_date'],
            },
        ),
        migrations.CreateModel(
            name='RiskTrend',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('risk_score_change', models.FloatField(help_text='Change in risk score from previous period')),
                ('risk_level_change', models.CharField(choices=[('IMPROVED', 'Improved'), ('STABLE', 'Stable'), ('DETERIORATED', 'Deteriorated'), ('CRITICAL', 'Critical Deterioration')], default='STABLE', max_length=20)),
                ('financial_performance', models.CharField(choices=[('POSITIVE', 'Positive'), ('NEUTRAL', 'Neutral'), ('NEGATIVE', 'Negative')], default='NEUTRAL', max_length=20)),
                ('compliance_performance', models.CharField(choices=[('POSITIVE', 'Positive'), ('NEUTRAL', 'Neutral'), ('NEGATIVE', 'Negative')], default='NEUTRAL', max_length=20)),
                ('key_factors', models.TextField(help_text='Key factors contributing to risk changes')),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_trends', to='core.smi')),
            ],
            options={
                'ordering': ['-period_start'],
            },
        ),
        migrations.CreateModel(
            name='StressTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateField(default=django.utils.timezone.now)),
                ('test_type', models.CharField(choices=[('SMI_LEVEL', 'SMI Level'), ('INDUSTRY_LEVEL', 'Industry Level'), ('SCENARIO', 'Scenario Based')], default='SMI_LEVEL', max_length=50)),
                ('scenario_name', models.CharField(default='Default Scenario', max_length=255)),
                ('scenario_description', models.TextField(default='Scenario description to be provided')),
                ('capital_adequacy_impact', models.FloatField(default=0, help_text='Impact on CAR')),
                ('liquidity_impact', models.FloatField(default=0, help_text='Impact on liquidity ratio')),
                ('profitability_impact', models.FloatField(default=0, help_text='Impact on profitability')),
                ('risk_score_change', models.FloatField(default=0, help_text='Change in risk score')),
                ('passed', models.BooleanField(default=False)),
                ('threshold_breach', models.BooleanField(default=False)),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('smi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stress_tests', to='core.smi')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('assessment_period', models.CharField(choices=[('QUARTERLY', 'Quarterly'), ('ANNUAL', 'Annual'), ('AD_HOC', 'Ad-hoc')], default='QUARTERLY', max_length=20)),
                ('fsi_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('inherent_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('operational_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('market_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('credit_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('car', models.FloatField(default=15, help_text='Capital Adequacy Ratio')),
                ('liquidity_ratio', models.FloatField(blank=True, null=True)),
                ('leverage_ratio', models.FloatField(blank=True, null=True)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM_LOW', 'Medium-Low Risk'), ('MEDIUM', 'Medium Risk'), ('MEDIUM_HIGH', 'Medium-High Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='MEDIUM', max_length=20)),
                ('compliance_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('overall_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('REVIEW_REQUIRED', 'Review Required')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessments', to='core.smi')),
            ],
            options={
                'ordering': ['-assessment_date'],
                'unique_together': {('smi', 'assessment_date', 'assessment_period')},
            },
        ),
    ]
