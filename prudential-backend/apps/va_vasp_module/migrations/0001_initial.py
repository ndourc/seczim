# Generated by Django 5.2.5 on 2025-08-27 20:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_remove_casenote_case_remove_casenote_author_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='VA_VASP',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_date', models.DateField(default=django.utils.timezone.now)),
                ('is_va_issuer', models.BooleanField(default=False)),
                ('is_vasp', models.BooleanField(default=False)),
                ('va_types', models.TextField(blank=True, help_text='Types of virtual assets handled')),
                ('va_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('vasp_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('overall_va_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('securities_exposure', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('regulatory_compliance', models.FloatField(default=75, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_profile', models.TextField(default='Risk profile to be generated')),
                ('recommendations', models.TextField(default='Recommendations to be provided')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('smi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='va_vasp_analyses', to='core.smi')),
            ],
            options={
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='VARiskAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('risk_category', models.CharField(choices=[('MARKET_RISK', 'Market Risk'), ('LIQUIDITY_RISK', 'Liquidity Risk'), ('OPERATIONAL_RISK', 'Operational Risk'), ('REGULATORY_RISK', 'Regulatory Risk'), ('TECHNOLOGY_RISK', 'Technology Risk'), ('CYBERSECURITY_RISK', 'Cybersecurity Risk'), ('COMPLIANCE_RISK', 'Compliance Risk')], default='MARKET_RISK', max_length=30)),
                ('risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_probability', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('VERY_HIGH', 'Very High')], default='MEDIUM', max_length=20)),
                ('risk_impact', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('risk_description', models.TextField(blank=True)),
                ('risk_factors', models.TextField(blank=True)),
                ('mitigation_strategies', models.TextField(blank=True)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('assessor_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('va_vasp_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='va_risk_assessments', to='va_vasp_module.va_vasp')),
            ],
            options={
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='VASPCompliance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('compliance_area', models.CharField(choices=[('KYC_AML', 'KYC/AML Compliance'), ('LICENSING', 'Licensing Requirements'), ('REPORTING', 'Reporting Requirements'), ('CAPITAL_ADEQUACY', 'Capital Adequacy'), ('CUSTODY', 'Custody Requirements'), ('CONSUMER_PROTECTION', 'Consumer Protection'), ('DATA_PROTECTION', 'Data Protection'), ('OTHER', 'Other Requirements')], default='OTHER', max_length=30)),
                ('compliance_status', models.CharField(choices=[('COMPLIANT', 'Compliant'), ('NON_COMPLIANT', 'Non-Compliant'), ('PARTIALLY_COMPLIANT', 'Partially Compliant'), ('UNDER_REVIEW', 'Under Review'), ('PENDING', 'Pending')], default='UNDER_REVIEW', max_length=30)),
                ('compliance_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('requirements', models.TextField(blank=True)),
                ('current_status', models.TextField(blank=True)),
                ('gaps_identified', models.TextField(blank=True)),
                ('remediation_plan', models.TextField(blank=True)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('target_compliance_date', models.DateField(blank=True, null=True)),
                ('actual_compliance_date', models.DateField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('va_vasp_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vasp_compliance', to='va_vasp_module.va_vasp')),
            ],
            options={
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='VASPService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_type', models.CharField(choices=[('EXCHANGE', 'Exchange Service'), ('WALLET', 'Wallet Service'), ('TRANSFER', 'Transfer Service'), ('CUSTODY', 'Custody Service'), ('TRADING', 'Trading Service'), ('STAKING', 'Staking Service'), ('LENDING', 'Lending Service'), ('OTHER', 'Other Service')], default='OTHER', max_length=20)),
                ('service_name', models.CharField(max_length=255)),
                ('service_description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_count', models.IntegerField(default=0)),
                ('transaction_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('service_risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_mitigation_measures', models.TextField(blank=True)),
                ('regulatory_licenses', models.TextField(blank=True)),
                ('compliance_status', models.CharField(default='Under Review', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('va_vasp_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vasp_services', to='va_vasp_module.va_vasp')),
            ],
        ),
        migrations.CreateModel(
            name='VirtualAsset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('asset_name', models.CharField(max_length=255)),
                ('asset_symbol', models.CharField(max_length=20)),
                ('asset_category', models.CharField(choices=[('CRYPTO', 'Cryptocurrency'), ('TOKEN', 'Token'), ('NFT', 'Non-Fungible Token'), ('STABLECOIN', 'Stablecoin'), ('DEFI_TOKEN', 'DeFi Token'), ('GAMING_TOKEN', 'Gaming Token'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('market_cap', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('trading_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('volatility_index', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='MEDIUM', max_length=20)),
                ('risk_score', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_factors', models.TextField(blank=True, help_text='Key risk factors identified')),
                ('regulatory_status', models.CharField(default='Under Review', max_length=50)),
                ('compliance_requirements', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('va_vasp_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_assets', to='va_vasp_module.va_vasp')),
            ],
        ),
    ]
